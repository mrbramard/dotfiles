#+property: header-args :tangle "init.el" :mkdirp yes
#+startup: content indent

* How to use this Org-mode emacs configuration

1. Put some emacs-lisp code inside a src block
2. run M-x org-babel-tangle to write the src blocks to init.el

** Tips

- Use M-x org-babel-demarcate-block to split a src block into 2
  
* Set up the Package Manager

#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  ;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
  ;; and `package-pinned-packages`. Most users will not need or want to do this.
  ;; (add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
  (package-initialize)
  (package-refresh-contents)
#+end_src

** Install the packages

#+begin_src emacs-lisp
  (custom-set-variables
   ;; custom-set-variables was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   '(package-selected-packages '(vertico lsp-mode magit gruvbox-theme org)))
  (custom-set-faces
   ;; custom-set-faces was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   )
#+end_src
* Basic UI stuff

Don't show the splash screen

#+begin_src emacs-lisp
  (setq inhibit-startup-message t)
#+end_src

#+begin_src emacs-lisp

  (load-theme 'gruvbox-dark-medium t)

  (menu-bar-mode 0)
  (tool-bar-mode 0)
  (scroll-bar-mode 0)
  (global-display-line-numbers-mode 0)

  (setq visible-bell 1)

  (set-frame-font "Cascadia Mono 12" nil)
  (add-to-list 'initial-frame-alist '(fullscreen . maximized)) 
#+end_src

* Vertico

Expand the minibuffer to display possible matches
Doesn't seems to work with emacs 27.1

#+begin_src emacs-lisp
  (vertico-mode 1)
#+end_src

* Keep folders clean

Place all the backup files (exemple.txt~) inside the emacs directory in a tmp/backups folder

#+begin_src emacs-lisp
  (setq backup-directory-alist `(("." . ,(expand-file-name "tmp/backups" user-emacs-directory))))
#+end_src

Place all the autosave files (#exemple.txt#) inside the emacs directory as well

#+begin_src emacs-lisp
  (make-directory (expand-file-name "tmp/auto-saves/" user-emacs-directory) t)

  (setq auto-save-list-file-prefix (expand-file-name "tmp/auto-saves/sessions/" user-emacs-directory)
        auto-save-file-name-transform `((".*" ,(expand-file-name "tmp/auto-saves/" user-emacs-directory) t)))
#+end_src

Finally disable the lock files (those can't be moved elsewhere)

#+begin_src emacs-lisp
  (setq create-lockfiles nil)
#+end_src

* Being EVIL

Let's try to use the Emacs Vi Layer mode to emulate vi inside emacs.
We'll see if this helps.

#+begin_src emacs-lisp
  (unless (package-installed-p 'evil)
    (package-install 'evil))

  (require 'evil)
  (evil-mode 0)
#+end_src
